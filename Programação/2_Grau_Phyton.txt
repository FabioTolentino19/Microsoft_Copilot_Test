Pergunta: Gerar codigo em Phyton para resolver equa√ß√£o de segundo grau

Resposta:

Claro! Vou gerar um c√≥digo em Python para resolver uma equa√ß√£o do segundo grau. A equa√ß√£o do segundo grau √© dada por:

ax2+bx+c=0

Aqui est√° um exemplo de c√≥digo que calcula as ra√≠zes de uma equa√ß√£o do segundo grau, considerando os valores de a, b e c fornecidos pelo usu√°rio:


from math import sqrt

def testandoNum(numero):
    while True:
        try:
            n = float(input(numero))
        except (ValueError, TypeError):
            print("Voc√™ n√£o digitou um n√∫mero v√°lido.")
            continue
        else:
            return n

def segGrau(a, b, c):
    delta = b**2 - 4 * a * c

    if delta < 0:
        print("Delta √© negativo, logo x n√£o pertence aos n√∫meros reais!")
    else:
        x1 = (-b + sqrt(delta)) / (2*a)
        x2 = (-b - sqrt(delta)) / (2*a)
        print(f"O valor de x1 √©: {x1}, e o valor de x2 √©: {x2}")

# Solicita os valores de a, b e c ao usu√°rio
num1 = testandoNum("Digite o valor de a: ")
num2 = testandoNum("Digite o valor de b: ")
num3 = testandoNum("Digite o valor de c: ")

# Calcula as ra√≠zes da equa√ß√£o do segundo grau
segGrau(num1, num2, num3)

Voc√™ pode testar o c√≥digo no compilador online [aqui](https://www.onlinegdb.com/online_python_compiler).
Espero que isso ajude! Se tiver mais alguma d√∫vida, fique √† vontade para perguntar. üòä